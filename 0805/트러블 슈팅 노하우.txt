2024.08.05.월

< 트러블 슈팅 노하우 >

노하우가 있다. 
경험이 쌓이면 점점 좋아짐
시스템에 대해서 알게 되는 부분이 있다. 

개발자 = 문제를 해결하는 사람
점점 더 복잡해진다. 
다양한 문제가 생김 

회복 탄력성에 주목하기 
보고하고 공유하는 게 중요 
일단, 주변 사람들에게 먼저 알려줘야 함. 

내가 그걸 제일 잘 아는 사람이 아닐 수 있다. 
우리 팀만의 문제가 아닐 수 있다. 
내가 모든 걸 알고 있는건 아니니까. 

원인 탐지 (질문 단계)
넘겨짚지 말고 시야를 넓게 하기 
이것저것 해보다보니까 갑자기 해결되는 경우도 있음 

가설 검증(실험)
우리는 시스템이 하나 밖에 없지만, 보통은 하나만 있지 않다.
Staging, Test, Local 환경에서 문제를 재현 
실험이 안된다고 적용을 못하는 건 아니다. 

뭔가 꼬인거 같다고 하면 이전으로 돌려버리기도 함 
부분적으로 해당 기능만 못쓰게 막는 기능도 있다. 
요즘에는 모니터링 Tool 들도 있다. 

장애 회고 문화 
문제의 원인, 개선 방안을 전체적으로 공유하는 문화 

니탓내탓 X
지레짐작 X
감추기 X
내 문제 아니라고 모른 척하지 말기
팀의 문제는 내 문제라고 생각하는게 맞다 

내가 잘못한 거 팀이랑 같이 해결
페어 디버깅 
On call 문화 
라인 장애문화
데브시스터즈 - CTO가 커리어를 걸고 비트 레벨까지 내려가..

-----------

Jira 
프런트 업무 분담 다시 

오늘 프런트, 백 통신 마무리
